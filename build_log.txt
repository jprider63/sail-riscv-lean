⚠ [2/6] Built LeanRV64DLEAN.Sail.BitVec
warning: ././././LeanRV64DLEAN/Sail/BitVec.lean:148:20: `Array.zipWithIndex` has been deprecated: use `Array.zipIdx` instead
✔ [3/6] Built LeanRV64DLEAN.Sail.Sail
✔ [4/6] Built LeanRV64DLEAN.RiscvExtras
✖ [5/6] Building LeanRV64DLEAN
trace: .> LEAN_PATH=././.lake/build/lib LD_LIBRARY_PATH= /home/runner/.elan/toolchains/leanprover--lean4-nightly---nightly-2025-02-05/bin/lean --tstack=400000 ././././LeanRV64DLEAN.lean -R ./././. -o ././.lake/build/lib/LeanRV64DLEAN.olean -i ././.lake/build/lib/LeanRV64DLEAN.ilean -c ././.lake/build/ir/LeanRV64DLEAN.c --json
error: ././././LeanRV64DLEAN.lean:1741:29: unknown identifier 'hex_str'
error: ././././LeanRV64DLEAN.lean:4066:31: unknown identifier 'hex_str'
error: ././././LeanRV64DLEAN.lean:4067:10: unknown identifier 'hex_str'
error: ././././LeanRV64DLEAN.lean:14318:4: fail to show termination for
  Functions.extensionEnabled
with errors
failed to infer structural recursion:
Cannot use parameter merge_var:
  the type extension does not have a `.brecOn` recursor


failed to prove termination, possible solutions:
  - Use `have`-expressions to prove the remaining goals
  - Use `termination_by` to specify a different well-founded relation
  - Use `decreasing_by` to specify your own tactic for discharging this kind of goal
⊢ False
error: ././././LeanRV64DLEAN.lean:19761:2: type mismatch
  cancel_reservation ()
has type
  PreSailM ?m.2212939 ?m.2212942 ?m.2212943 Bool : Type
but is expected to have type
  SailM PUnit : Type
error: ././././LeanRV64DLEAN.lean:22516:7: type mismatch
  x✝
has type
  Unit : Type
but is expected to have type
  SailM ?m.2490836 : Type
error: ././././LeanRV64DLEAN.lean:23736:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23737:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23746:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23747:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23862:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23863:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23872:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23873:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23882:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23883:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23893:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23894:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23904:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23905:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23916:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23917:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:23953:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 32 : Type
error: ././././LeanRV64DLEAN.lean:27784:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.2751283 ?m.2751130 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:27795:29: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.2751965
error: ././././LeanRV64DLEAN.lean:27800:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2752082
error: ././././LeanRV64DLEAN.lean:27809:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2752492
error: ././././LeanRV64DLEAN.lean:27783:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.2750836 Unit : Type
error: ././././LeanRV64DLEAN.lean:27783:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.2750836 Unit : Type
error: ././././LeanRV64DLEAN.lean:27815:27: invalid `do` notation, expected type is not a monad application
  Unit
You can use the `do` notation in pure code by writing `Id.run do` instead of `do`, where `Id` is the identity monad.
error: ././././LeanRV64DLEAN.lean:27851:30: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.2755300 ?m.2755147 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:27861:42: function expected at
  writeReg vl ?m.2756407 ?m.2756965
term has type
  EStateM.Result (Error ?m.2756371) (SequentialState ?m.2756367 ?m.2756370) PUnit
error: ././././LeanRV64DLEAN.lean:27869:41: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.2757128
error: ././././LeanRV64DLEAN.lean:27872:47: function expected at
  writeReg vl ?m.2757270 ?m.2757667
term has type
  EStateM.Result (Error ?m.2757259) (SequentialState ?m.2757255 ?m.2757258) PUnit
error: ././././LeanRV64DLEAN.lean:27880:43: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2757866
error: ././././LeanRV64DLEAN.lean:27883:49: function expected at
  writeReg vl ?m.2758042 ?m.2758439
term has type
  EStateM.Result (Error ?m.2758031) (SequentialState ?m.2758027 ?m.2758030) PUnit
error: ././././LeanRV64DLEAN.lean:27894:37: application type mismatch
  write_single_element (load_width_bytes * 8) (↑i) (vd + to_bits 5 (↑j * EMUL_reg))
    (BitVec.setWidth (load_width_bytes * 8) elem) trimmed
argument
  trimmed
has type
  Bool : Type
but is expected to have type
  SequentialState RegisterType trivialChoiceSource : Type
error: ././././LeanRV64DLEAN.lean:27897:45: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2759586
error: ././././LeanRV64DLEAN.lean:27900:51: function expected at
  writeReg vl ?m.2759796 ?m.2760193
term has type
  EStateM.Result (Error ?m.2759785) (SequentialState ?m.2759781 ?m.2759784) PUnit
error: ././././LeanRV64DLEAN.lean:27850:18: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.2754866 Bool : Type
error: ././././LeanRV64DLEAN.lean:27850:18: application type mismatch
  pure x✝
argument
  x✝
has type
  Bool : Type
but is expected to have type
  ER ?m.2754866 Bool : Type
error: ././././LeanRV64DLEAN.lean:27915:22: application type mismatch
  foreach_M loop_j_lower loop_j_upper 1 ()
    (fun j x =>
      let skipped_elem :=
        Sail.BitVec.extractLsb (shiftr (vectorAccess result i) (j * load_width_bytes * 8)) (load_width_bytes * 8 - 1) 0;
      write_single_element (load_width_bytes * 8) (↑i) (vd + to_bits 5 (↑j * EMUL_reg))
        (BitVec.setWidth (load_width_bytes * 8) skipped_elem))
    trimmed
argument
  trimmed
has type
  Bool : Type
but is expected to have type
  SequentialState RegisterType trivialChoiceSource : Type
error: ././././LeanRV64DLEAN.lean:27919:22: type mismatch
  foreach_M loop_j_lower loop_j_upper 1 () fun j x =>
    let skipped_elem :=
      Sail.BitVec.extractLsb (shiftr (vectorAccess vd_seg i) (j * load_width_bytes * 8)) (load_width_bytes * 8 - 1) 0;
    write_single_element (load_width_bytes * 8) (↑i) (vd + to_bits 5 (↑j * EMUL_reg))
      (BitVec.setWidth (load_width_bytes * 8) skipped_elem)
has type
  PreSailM RegisterType trivialChoiceSource exception Unit : Type
but is expected to have type
  Bool : Type
error: ././././LeanRV64DLEAN.lean:27927:22: function expected at
  pure ()
term has type
  ?m.2767877 Unit
error: ././././LeanRV64DLEAN.lean:27901:42: application type mismatch
  writeReg vl ?m.2759796 (pure (print_endline ("CSR vl <- " ++ BitVec.toFormatted __do_lift✝)))
argument
  pure (print_endline ("CSR vl <- " ++ BitVec.toFormatted __do_lift✝))
has type
  ?m.2759799 Unit : Type ?u.2759797
but is expected to have type
  SequentialState ?m.2759781 ?m.2759784 : Type
error: ././././LeanRV64DLEAN.lean:27954:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.2769501 ?m.2769348 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:27965:29: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.2770183
error: ././././LeanRV64DLEAN.lean:27970:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2770302
error: ././././LeanRV64DLEAN.lean:27978:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2770442
error: ././././LeanRV64DLEAN.lean:27993:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2770952
error: ././././LeanRV64DLEAN.lean:27953:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.2769051 Unit : Type
error: ././././LeanRV64DLEAN.lean:27953:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.2769051 Unit : Type
error: ././././LeanRV64DLEAN.lean:28024:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.2773685 ?m.2773532 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:28035:29: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.2774359
error: ././././LeanRV64DLEAN.lean:28040:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2774476
error: ././././LeanRV64DLEAN.lean:28049:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2774886
error: ././././LeanRV64DLEAN.lean:28023:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.2773238 Unit : Type
error: ././././LeanRV64DLEAN.lean:28023:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.2773238 Unit : Type
error: ././././LeanRV64DLEAN.lean:28055:27: invalid `do` notation, expected type is not a monad application
  Unit
You can use the `do` notation in pure code by writing `Id.run do` instead of `do`, where `Id` is the identity monad.
error: ././././LeanRV64DLEAN.lean:28088:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.2777277 ?m.2777124 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:28099:29: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.2777951
error: ././././LeanRV64DLEAN.lean:28104:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2778070
error: ././././LeanRV64DLEAN.lean:28112:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2778210
error: ././././LeanRV64DLEAN.lean:28127:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2778720
error: ././././LeanRV64DLEAN.lean:28087:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.2776827 Unit : Type
error: ././././LeanRV64DLEAN.lean:28087:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.2776827 Unit : Type
error: ././././LeanRV64DLEAN.lean:28160:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.2781296 ?m.2781143 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:28172:29: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.2782183
error: ././././LeanRV64DLEAN.lean:28177:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2782300
error: ././././LeanRV64DLEAN.lean:28186:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2782680
error: ././././LeanRV64DLEAN.lean:28159:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.2780849 Unit : Type
error: ././././LeanRV64DLEAN.lean:28159:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.2780849 Unit : Type
error: ././././LeanRV64DLEAN.lean:28192:27: invalid `do` notation, expected type is not a monad application
  Unit
You can use the `do` notation in pure code by writing `Id.run do` instead of `do`, where `Id` is the identity monad.
error: ././././LeanRV64DLEAN.lean:28227:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.2785048 ?m.2784895 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:28239:29: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.2785937
error: ././././LeanRV64DLEAN.lean:28244:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2786056
error: ././././LeanRV64DLEAN.lean:28252:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2786196
error: ././././LeanRV64DLEAN.lean:28267:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2786676
error: ././././LeanRV64DLEAN.lean:28226:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.2784598 Unit : Type
error: ././././LeanRV64DLEAN.lean:28226:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.2784598 Unit : Type
error: ././././LeanRV64DLEAN.lean:28302:34: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.2788977
error: ././././LeanRV64DLEAN.lean:28307:36: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2789133
error: ././././LeanRV64DLEAN.lean:28314:31: type mismatch, result value has type
  Unit : Type
but is expected to have type
  ER Retired ?m.2788819 : Type
error: ././././LeanRV64DLEAN.lean:28317:38: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2789602
error: ././././LeanRV64DLEAN.lean:28333:25: application type mismatch
  foreach_ME (cont loop_i_lower)
argument
  cont loop_i_lower
has type
  ER ?m.2790846 ?m.2790696 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:28345:31: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.2791666
error: ././././LeanRV64DLEAN.lean:28350:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2791827
error: ././././LeanRV64DLEAN.lean:28356:28: type mismatch, result value has type
  Unit : Type
but is expected to have type
  ER Retired ?m.2791520 : Type
error: ././././LeanRV64DLEAN.lean:28358:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2792345
error: ././././LeanRV64DLEAN.lean:28332:13: application type mismatch
  pure x✝
argument
  x✝
has type
  Int : Type
but is expected to have type
  ER Retired Int : Type
error: ././././LeanRV64DLEAN.lean:28393:34: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.2794686
error: ././././LeanRV64DLEAN.lean:28398:36: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2794842
error: ././././LeanRV64DLEAN.lean:28406:38: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2795019
error: ././././LeanRV64DLEAN.lean:28416:45: type mismatch, result value has type
  Unit : Type
but is expected to have type
  ER Retired ?m.2794528 : Type
error: ././././LeanRV64DLEAN.lean:28421:40: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2795618
error: ././././LeanRV64DLEAN.lean:28439:25: application type mismatch
  foreach_ME (cont loop_i_lower)
argument
  cont loop_i_lower
has type
  ER ?m.2796966 ?m.2796823 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:28451:31: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.2797692
error: ././././LeanRV64DLEAN.lean:28456:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2797849
error: ././././LeanRV64DLEAN.lean:28464:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2798031
error: ././././LeanRV64DLEAN.lean:28472:42: type mismatch, result value has type
  Unit : Type
but is expected to have type
  ER Retired ?m.2797550 : Type
error: ././././LeanRV64DLEAN.lean:28477:37: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2798575
error: ././././LeanRV64DLEAN.lean:28438:13: application type mismatch
  pure x✝
argument
  x✝
has type
  Int : Type
but is expected to have type
  ER Retired Int : Type
error: ././././LeanRV64DLEAN.lean:28469:84: application type mismatch
  vectorAccess vs3_val
argument
  vs3_val
has type
  Vector (BitVec (load_width_bytes * 8)) elem_per_reg : Type
but is expected to have type
  Vector (BitVec (8 * load_width_bytes))
    (?m.2800316 start_element __discr✝ cur_elem✝¹ cur_field j cur_elem✝ vs3_val i cur_elem x✝¹ __do_lift✝¹ vaddr
      __do_lift✝ paddr snd✝ eares x✝) : Type
error: ././././LeanRV64DLEAN.lean:28531:30: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.2802276
error: ././././LeanRV64DLEAN.lean:28536:32: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2802388
error: ././././LeanRV64DLEAN.lean:28544:34: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2802596
error: ././././LeanRV64DLEAN.lean:28555:35: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.2803225
error: ././././LeanRV64DLEAN.lean:28560:37: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2803337
error: ././././LeanRV64DLEAN.lean:28568:39: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2803473
error: ././././LeanRV64DLEAN.lean:28581:41: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.2803805
error: ././././LeanRV64DLEAN.lean:28586:20: application type mismatch
  ite ((op == VLM) = true) (write_single_element 8 (↑i) vd_or_vs3 (vectorAccess vd_or_vs3_val i))
argument
  write_single_element 8 (↑i) vd_or_vs3 (vectorAccess vd_or_vs3_val i)
has type
  SailM Unit : Type
but is expected to have type
  Unit : Type
error: ././././LeanRV64DLEAN.lean:29875:31: unknown identifier 'plat_cache_block_size_exp'
error: ././././LeanRV64DLEAN.lean:65052:123: unexpected token 'if'; expected ')', ',' or ':'
error: ././././LeanRV64DLEAN.lean:65293:47: unexpected token '←'; expected ':=' or '|'
error: ././././LeanRV64DLEAN.lean:65637:29: function expected at
  early_return (handle_illegal_vtype ())
term has type
  ER (SailM Unit) ?m.3795425
error: ././././LeanRV64DLEAN.lean:65674:29: function expected at
  early_return (handle_illegal_vtype ())
term has type
  ER (SailM Unit) ?m.3802327
error: ././././LeanRV64DLEAN.lean:65720:28: application type mismatch
  vectorAccess vs2_val
argument
  vs2_val
has type
  Vector (BitVec SEW.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec (2 ^ 3 * 8)) (?m.3819147 SEW num_elem __do_lift✝ x✝ vs2_val) : Type
error: ././././LeanRV64DLEAN.lean:66104:125: unexpected token 'if'; expected ')', ',' or ':'
error: ././././LeanRV64DLEAN.lean:66379:42: unexpected token '('; expected ':=', '_', 'rec' or identifier
error: ././././LeanRV64DLEAN.lean:66469:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66470:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66477:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66478:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66485:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66486:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66489:70: application type mismatch
  vectorAccess vs2_val
argument
  vs2_val
has type
  Vector (BitVec SEW.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec 16)
    (?m.3888805 rm_3b SEW LMUL_pow num_elem __do_lift✝ x✝ vm_val vs2_val vd_val __discr✝ initial_result mask i
      result) : Type
error: ././././LeanRV64DLEAN.lean:66524:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66525:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66532:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66533:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66542:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66543:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66551:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66552:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66559:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66560:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66567:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66568:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:66568:86: application type mismatch
  vectorAccess vs2_val
argument
  vs2_val
has type
  Vector (BitVec SEW.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec 64)
    (?m.3903981 rm_3b SEW LMUL_pow num_elem __do_lift✝ x✝¹ vm_val vs2_val vd_val __discr✝ initial_result mask i result
      x✝) : Type
error: ././././LeanRV64DLEAN.lean:66607:42: unexpected token '('; expected ':=', '_', 'rec' or identifier
error: ././././LeanRV64DLEAN.lean:66604:25: don't know how to synthesize placeholder
context:
case m
vm : BitVec 1
vs2 : BitVec 5
vfnunary0 : _root_.vfnunary0
vd : BitVec 5
rm_3b : BitVec 3
SEW LMUL_pow num_elem : Int
SEW_widen : Int := SEW * 2
LMUL_pow_widen : Int := LMUL_pow + 1
x✝ : PUnit
n : Int := num_elem
m : Int := SEW
o : Int := SEW_widen
vm_val : BitVec num_elem.toNat
vs2_val : Vector (BitVec SEW_widen.toNat) num_elem.toNat
vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:66603:18: don't know how to synthesize placeholder for argument 'α'
context:
vm : BitVec 1
vs2 : BitVec 5
vfnunary0 : _root_.vfnunary0
vd : BitVec 5
rm_3b : BitVec 3
SEW LMUL_pow num_elem : Int
SEW_widen : Int := SEW * 2
LMUL_pow_widen : Int := LMUL_pow + 1
x✝ : PUnit
n : Int := num_elem
m : Int := SEW
o : Int := SEW_widen
vm_val : BitVec num_elem.toNat
vs2_val : Vector (BitVec SEW_widen.toNat) num_elem.toNat
vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:66740:37: application type mismatch
  vectorAccess vs2_val
argument
  vs2_val
has type
  Vector (BitVec SEW.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec 64) (?m.3914774 rm_3b SEW num_elem __do_lift✝ x✝¹ vs2_val x✝) : Type
error: ././././LeanRV64DLEAN.lean:67033:24: application type mismatch
  not (match_reservation (physaddr_bits addr))
argument
  match_reservation (physaddr_bits addr)
has type
  PreSailM ?m.3932309 ?m.3932312 ?m.3932313 Bool : Type
but is expected to have type
  Bool : Type
error: ././././LeanRV64DLEAN.lean:67053:25: type mismatch
  cancel_reservation ()
has type
  PreSailM ?m.3935147 ?m.3935150 ?m.3935151 Bool : Type
but is expected to have type
  SailM PUnit : Type
error: ././././LeanRV64DLEAN.lean:67442:36: unknown identifier 'plat_cache_block_size_exp'
error: ././././LeanRV64DLEAN.lean:68715:47: unexpected token '←'; expected ':=' or '|'
error: ././././LeanRV64DLEAN.lean:68709:25: don't know how to synthesize placeholder
context:
case m
funct6 : mvxfunct6
vm : BitVec 1
vs2 rs1 vd : BitVec 5
SEW LMUL_pow num_elem : Int
n : Int := num_elem
m : Int := SEW
vm_val : BitVec num_elem.toNat
rs1_val : BitVec SEW.toNat
vs2_val vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:68708:18: don't know how to synthesize placeholder for argument 'α'
context:
funct6 : mvxfunct6
vm : BitVec 1
vs2 rs1 vd : BitVec 5
SEW LMUL_pow num_elem : Int
n : Int := num_elem
m : Int := SEW
vm_val : BitVec num_elem.toNat
rs1_val : BitVec SEW.toNat
vs2_val vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:70456:82: application type mismatch
  vectorAccess vd_val
argument
  vd_val
has type
  Vector (BitVec SEW_widen.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec (SEW.toNat * 2))
    (?m.4153717 rm_3b SEW LMUL_pow num_elem __do_lift✝² x✝ vm_val vd_val vs1_val vs2_val __discr✝ initial_result mask i
      result __do_lift✝¹ __do_lift✝) : Type
error: ././././LeanRV64DLEAN.lean:70591:82: application type mismatch
  vectorAccess vd_val
argument
  vd_val
has type
  Vector (BitVec SEW_widen.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec (m.toNat * 2))
    (?m.4170647 rm_3b SEW LMUL_pow num_elem __do_lift✝² x✝ vm_val vd_val rs1_val vs2_val __discr✝ initial_result mask i
      result __do_lift✝¹ __do_lift✝) : Type
error: ././././LeanRV64DLEAN.lean:70842:52: unexpected token '←'; expected ':=' or '|'
error: ././././LeanRV64DLEAN.lean:70806:25: don't know how to synthesize placeholder
context:
case m
funct6 : fvffunct6
vm : BitVec 1
vs2 rs1 vd : BitVec 5
rm_3b : BitVec 3
SEW LMUL_pow num_elem : Int
x✝ : PUnit
n : Int := num_elem
m : Int := SEW
vm_val : BitVec num_elem.toNat
rs1_val : BitVec m.toNat
vs2_val vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:70805:18: don't know how to synthesize placeholder for argument 'α'
context:
funct6 : fvffunct6
vm : BitVec 1
vs2 rs1 vd : BitVec 5
rm_3b : BitVec 3
SEW LMUL_pow num_elem : Int
x✝ : PUnit
n : Int := num_elem
m : Int := SEW
vm_val : BitVec num_elem.toNat
rs1_val : BitVec m.toNat
vs2_val vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:75652:11: unexpected token 'while'; expected ')' or term
error: ././././LeanRV64DLEAN.lean:75651:6: don't know how to synthesize placeholder
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i✝ : Int := 0
step_no✝ : Int := 0
__discr✝ : ?m.5102728 x✝ × ?m.5102729 x✝ × ?m.5102730 x✝
u__3 : ?m.5102728 x✝
i : ?m.5102729 x✝
step_no : ?m.5102730 x✝
⊢ Type
error: ././././LeanRV64DLEAN.lean:75651:6: don't know how to synthesize placeholder
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i✝ : Int := 0
step_no✝ : Int := 0
__discr✝ : ?m.5102728 x✝ × ?m.5102729 x✝ × ?m.5102730 x✝
u__3 : ?m.5102728 x✝
i : ?m.5102729 x✝
step_no : ?m.5102730 x✝
⊢ Type
error: ././././LeanRV64DLEAN.lean:75651:6: don't know how to synthesize placeholder
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i✝ : Int := 0
step_no✝ : Int := 0
__discr✝ : ?m.5102728 x✝ × ?m.5102729 x✝ × ?m.5102730 x✝
u__3 : ?m.5102728 x✝
i : ?m.5102729 x✝
step_no : ?m.5102730 x✝
⊢ Type
error: ././././LeanRV64DLEAN.lean:75651:6: don't know how to synthesize placeholder
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i✝ : Int := 0
step_no✝ : Int := 0
__discr✝ : ?m.5102728 x✝ × ?m.5102729 x✝ × ?m.5102730 x✝
u__3 : ?m.5102728 x✝
i : ?m.5102729 x✝
step_no : ?m.5102730 x✝
⊢ Type
error: ././././LeanRV64DLEAN.lean:75652:4: don't know how to synthesize placeholder for argument 'α'
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i : Int := 0
step_no : Int := 0
⊢ Type
error: ././././LeanRV64DLEAN.lean:75695:2: application type mismatch
  init_model () (cycle_count ())
argument
  cycle_count ()
has type
  PreSailM ?m.5104927 ?m.5104930 ?m.5104931 Unit : Type
but is expected to have type
  SequentialState RegisterType trivialChoiceSource : Type
error: Lean exited with code 1
Some required builds logged failures:
- LeanRV64DLEAN
