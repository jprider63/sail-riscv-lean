✔ [2/7] Built LeanRV64DLEAN.Sail.BitVec
✔ [3/7] Built LeanRV64DLEAN.Sail.Sail
✔ [4/7] Built LeanRV64DLEAN.Defs
✔ [5/7] Built LeanRV64DLEAN.RiscvExtras
✖ [6/7] Building LeanRV64DLEAN
trace: .> LEAN_PATH=././.lake/build/lib LD_LIBRARY_PATH= /home/runner/.elan/toolchains/leanprover--lean4-nightly---nightly-2025-02-05/bin/lean --tstack=400000 ././././LeanRV64DLEAN.lean -R ./././. -o ././.lake/build/lib/LeanRV64DLEAN.olean -i ././.lake/build/lib/LeanRV64DLEAN.ilean -c ././.lake/build/ir/LeanRV64DLEAN.c --json
error: ././././LeanRV64DLEAN.lean:21046:7: type mismatch
  x✝
has type
  Unit : Type
but is expected to have type
  SailM ?m.1545029 : Type
error: ././././LeanRV64DLEAN.lean:22266:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22267:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22276:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22277:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22392:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22393:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22402:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22403:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22412:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22413:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22423:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22424:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22434:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22435:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22446:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22447:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22483:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 32 : Type
error: ././././LeanRV64DLEAN.lean:26314:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.1805475 ?m.1805322 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26325:29: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1806157
error: ././././LeanRV64DLEAN.lean:26330:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1806274
error: ././././LeanRV64DLEAN.lean:26339:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1806684
error: ././././LeanRV64DLEAN.lean:26313:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.1805028 Unit : Type
error: ././././LeanRV64DLEAN.lean:26313:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.1805028 Unit : Type
error: ././././LeanRV64DLEAN.lean:26345:27: invalid `do` notation, expected type is not a monad application
  Unit
You can use the `do` notation in pure code by writing `Id.run do` instead of `do`, where `Id` is the identity monad.
error: ././././LeanRV64DLEAN.lean:26381:30: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.1809492 ?m.1809339 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26391:42: function expected at
  writeReg vl ?m.1810599 ?m.1811157
term has type
  EStateM.Result (Error ?m.1810563) (SequentialState ?m.1810559 ?m.1810562) PUnit
error: ././././LeanRV64DLEAN.lean:26399:41: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1811320
error: ././././LeanRV64DLEAN.lean:26402:47: function expected at
  writeReg vl ?m.1811462 ?m.1811859
term has type
  EStateM.Result (Error ?m.1811451) (SequentialState ?m.1811447 ?m.1811450) PUnit
error: ././././LeanRV64DLEAN.lean:26410:43: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1812058
error: ././././LeanRV64DLEAN.lean:26413:49: function expected at
  writeReg vl ?m.1812234 ?m.1812631
term has type
  EStateM.Result (Error ?m.1812223) (SequentialState ?m.1812219 ?m.1812222) PUnit
error: ././././LeanRV64DLEAN.lean:26424:37: application type mismatch
  write_single_element (load_width_bytes * 8) (↑i) (vd + to_bits 5 (↑j * EMUL_reg))
    (BitVec.setWidth (load_width_bytes * 8) elem) trimmed
argument
  trimmed
has type
  Bool : Type
but is expected to have type
  SequentialState RegisterType trivialChoiceSource : Type
error: ././././LeanRV64DLEAN.lean:26427:45: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1813778
error: ././././LeanRV64DLEAN.lean:26430:51: function expected at
  writeReg vl ?m.1813988 ?m.1814385
term has type
  EStateM.Result (Error ?m.1813977) (SequentialState ?m.1813973 ?m.1813976) PUnit
error: ././././LeanRV64DLEAN.lean:26380:18: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.1809058 Bool : Type
error: ././././LeanRV64DLEAN.lean:26380:18: application type mismatch
  pure x✝
argument
  x✝
has type
  Bool : Type
but is expected to have type
  ER ?m.1809058 Bool : Type
error: ././././LeanRV64DLEAN.lean:26445:22: application type mismatch
  foreach_M loop_j_lower loop_j_upper 1 ()
    (fun j x =>
      let skipped_elem :=
        Sail.BitVec.extractLsb (shiftr (vectorAccess result i) (j * load_width_bytes * 8)) (load_width_bytes * 8 - 1) 0;
      write_single_element (load_width_bytes * 8) (↑i) (vd + to_bits 5 (↑j * EMUL_reg))
        (BitVec.setWidth (load_width_bytes * 8) skipped_elem))
    trimmed
argument
  trimmed
has type
  Bool : Type
but is expected to have type
  SequentialState RegisterType trivialChoiceSource : Type
error: ././././LeanRV64DLEAN.lean:26449:22: type mismatch
  foreach_M loop_j_lower loop_j_upper 1 () fun j x =>
    let skipped_elem :=
      Sail.BitVec.extractLsb (shiftr (vectorAccess vd_seg i) (j * load_width_bytes * 8)) (load_width_bytes * 8 - 1) 0;
    write_single_element (load_width_bytes * 8) (↑i) (vd + to_bits 5 (↑j * EMUL_reg))
      (BitVec.setWidth (load_width_bytes * 8) skipped_elem)
has type
  PreSailM RegisterType trivialChoiceSource exception Unit : Type
but is expected to have type
  Bool : Type
error: ././././LeanRV64DLEAN.lean:26457:22: function expected at
  pure ()
term has type
  ?m.1822069 Unit
error: ././././LeanRV64DLEAN.lean:26431:42: application type mismatch
  writeReg vl ?m.1813988 (pure (print_endline ("CSR vl <- " ++ BitVec.toFormatted __do_lift✝)))
argument
  pure (print_endline ("CSR vl <- " ++ BitVec.toFormatted __do_lift✝))
has type
  ?m.1813991 Unit : Type ?u.1813989
but is expected to have type
  SequentialState ?m.1813973 ?m.1813976 : Type
error: ././././LeanRV64DLEAN.lean:26484:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.1823693 ?m.1823540 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26495:29: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1824375
error: ././././LeanRV64DLEAN.lean:26500:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1824494
error: ././././LeanRV64DLEAN.lean:26508:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1824634
error: ././././LeanRV64DLEAN.lean:26523:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1825144
error: ././././LeanRV64DLEAN.lean:26483:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.1823243 Unit : Type
error: ././././LeanRV64DLEAN.lean:26483:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.1823243 Unit : Type
error: ././././LeanRV64DLEAN.lean:26554:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.1827877 ?m.1827724 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26565:29: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1828551
error: ././././LeanRV64DLEAN.lean:26570:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1828668
error: ././././LeanRV64DLEAN.lean:26579:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1829078
error: ././././LeanRV64DLEAN.lean:26553:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.1827430 Unit : Type
error: ././././LeanRV64DLEAN.lean:26553:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.1827430 Unit : Type
error: ././././LeanRV64DLEAN.lean:26585:27: invalid `do` notation, expected type is not a monad application
  Unit
You can use the `do` notation in pure code by writing `Id.run do` instead of `do`, where `Id` is the identity monad.
error: ././././LeanRV64DLEAN.lean:26618:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.1831469 ?m.1831316 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26629:29: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1832143
error: ././././LeanRV64DLEAN.lean:26634:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1832262
error: ././././LeanRV64DLEAN.lean:26642:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1832402
error: ././././LeanRV64DLEAN.lean:26657:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1832912
error: ././././LeanRV64DLEAN.lean:26617:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.1831019 Unit : Type
error: ././././LeanRV64DLEAN.lean:26617:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.1831019 Unit : Type
error: ././././LeanRV64DLEAN.lean:26690:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.1835488 ?m.1835335 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26702:29: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1836375
error: ././././LeanRV64DLEAN.lean:26707:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1836492
error: ././././LeanRV64DLEAN.lean:26716:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1836872
error: ././././LeanRV64DLEAN.lean:26689:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.1835041 Unit : Type
error: ././././LeanRV64DLEAN.lean:26689:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.1835041 Unit : Type
error: ././././LeanRV64DLEAN.lean:26722:27: invalid `do` notation, expected type is not a monad application
  Unit
You can use the `do` notation in pure code by writing `Id.run do` instead of `do`, where `Id` is the identity monad.
error: ././././LeanRV64DLEAN.lean:26757:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.1839240 ?m.1839087 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26769:29: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1840129
error: ././././LeanRV64DLEAN.lean:26774:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1840248
error: ././././LeanRV64DLEAN.lean:26782:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1840388
error: ././././LeanRV64DLEAN.lean:26797:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1840868
error: ././././LeanRV64DLEAN.lean:26756:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.1838790 Unit : Type
error: ././././LeanRV64DLEAN.lean:26756:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.1838790 Unit : Type
error: ././././LeanRV64DLEAN.lean:26832:34: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1843169
error: ././././LeanRV64DLEAN.lean:26837:36: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1843325
error: ././././LeanRV64DLEAN.lean:26844:31: type mismatch, result value has type
  Unit : Type
but is expected to have type
  ER Retired ?m.1843011 : Type
error: ././././LeanRV64DLEAN.lean:26847:38: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1843794
error: ././././LeanRV64DLEAN.lean:26863:25: application type mismatch
  foreach_ME (cont loop_i_lower)
argument
  cont loop_i_lower
has type
  ER ?m.1845038 ?m.1844888 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26875:31: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1845858
error: ././././LeanRV64DLEAN.lean:26880:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1846019
error: ././././LeanRV64DLEAN.lean:26886:28: type mismatch, result value has type
  Unit : Type
but is expected to have type
  ER Retired ?m.1845712 : Type
error: ././././LeanRV64DLEAN.lean:26888:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1846537
error: ././././LeanRV64DLEAN.lean:26862:13: application type mismatch
  pure x✝
argument
  x✝
has type
  Int : Type
but is expected to have type
  ER Retired Int : Type
error: ././././LeanRV64DLEAN.lean:26923:34: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1848878
error: ././././LeanRV64DLEAN.lean:26928:36: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1849034
error: ././././LeanRV64DLEAN.lean:26936:38: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1849211
error: ././././LeanRV64DLEAN.lean:26946:45: type mismatch, result value has type
  Unit : Type
but is expected to have type
  ER Retired ?m.1848720 : Type
error: ././././LeanRV64DLEAN.lean:26951:40: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1849810
error: ././././LeanRV64DLEAN.lean:26969:25: application type mismatch
  foreach_ME (cont loop_i_lower)
argument
  cont loop_i_lower
has type
  ER ?m.1851158 ?m.1851015 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26981:31: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1851884
error: ././././LeanRV64DLEAN.lean:26986:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1852041
error: ././././LeanRV64DLEAN.lean:26994:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1852223
error: ././././LeanRV64DLEAN.lean:27002:42: type mismatch, result value has type
  Unit : Type
but is expected to have type
  ER Retired ?m.1851742 : Type
error: ././././LeanRV64DLEAN.lean:27007:37: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1852767
error: ././././LeanRV64DLEAN.lean:26968:13: application type mismatch
  pure x✝
argument
  x✝
has type
  Int : Type
but is expected to have type
  ER Retired Int : Type
error: ././././LeanRV64DLEAN.lean:26999:84: application type mismatch
  vectorAccess vs3_val
argument
  vs3_val
has type
  Vector (BitVec (load_width_bytes * 8)) elem_per_reg : Type
but is expected to have type
  Vector (BitVec (8 * load_width_bytes))
    (?m.1854508 start_element __discr✝ cur_elem✝¹ cur_field j cur_elem✝ vs3_val i cur_elem x✝¹ __do_lift✝¹ vaddr
      __do_lift✝ paddr snd✝ eares x✝) : Type
error: ././././LeanRV64DLEAN.lean:27061:30: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1856468
error: ././././LeanRV64DLEAN.lean:27066:32: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1856580
error: ././././LeanRV64DLEAN.lean:27074:34: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1856788
error: ././././LeanRV64DLEAN.lean:27085:35: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1857417
error: ././././LeanRV64DLEAN.lean:27090:37: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1857529
error: ././././LeanRV64DLEAN.lean:27098:39: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1857665
error: ././././LeanRV64DLEAN.lean:27111:41: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1857997
error: ././././LeanRV64DLEAN.lean:27116:20: application type mismatch
  ite ((op == VLM) = true) (write_single_element 8 (↑i) vd_or_vs3 (vectorAccess vd_or_vs3_val i))
argument
  write_single_element 8 (↑i) vd_or_vs3 (vectorAccess vd_or_vs3_val i)
has type
  SailM Unit : Type
but is expected to have type
  Unit : Type
error: ././././LeanRV64DLEAN.lean:63582:123: unexpected token 'if'; expected ')', ',' or ':'
error: ././././LeanRV64DLEAN.lean:63823:47: unexpected token '←'; expected ':=' or '|'
error: ././././LeanRV64DLEAN.lean:64167:29: function expected at
  early_return (handle_illegal_vtype ())
term has type
  ER (SailM Unit) ?m.2849590
error: ././././LeanRV64DLEAN.lean:64204:29: function expected at
  early_return (handle_illegal_vtype ())
term has type
  ER (SailM Unit) ?m.2856492
error: ././././LeanRV64DLEAN.lean:64250:28: application type mismatch
  vectorAccess vs2_val
argument
  vs2_val
has type
  Vector (BitVec SEW.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec (2 ^ 3 * 8)) (?m.2873312 SEW num_elem __do_lift✝ x✝ vs2_val) : Type
error: ././././LeanRV64DLEAN.lean:64634:125: unexpected token 'if'; expected ')', ',' or ':'
error: ././././LeanRV64DLEAN.lean:64909:42: unexpected token '('; expected ':=', '_', 'rec' or identifier
error: ././././LeanRV64DLEAN.lean:64999:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65000:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65007:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65008:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65015:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65016:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65019:70: application type mismatch
  vectorAccess vs2_val
argument
  vs2_val
has type
  Vector (BitVec SEW.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec 16)
    (?m.2942970 rm_3b SEW LMUL_pow num_elem __do_lift✝ x✝ vm_val vs2_val vd_val __discr✝ initial_result mask i
      result) : Type
error: ././././LeanRV64DLEAN.lean:65054:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65055:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65062:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65063:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65072:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65073:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65081:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65082:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65089:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65090:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65097:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65098:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65098:86: application type mismatch
  vectorAccess vs2_val
argument
  vs2_val
has type
  Vector (BitVec SEW.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec 64)
    (?m.2958146 rm_3b SEW LMUL_pow num_elem __do_lift✝ x✝¹ vm_val vs2_val vd_val __discr✝ initial_result mask i result
      x✝) : Type
error: ././././LeanRV64DLEAN.lean:65137:42: unexpected token '('; expected ':=', '_', 'rec' or identifier
error: ././././LeanRV64DLEAN.lean:65134:25: don't know how to synthesize placeholder
context:
case m
vm : BitVec 1
vs2 : BitVec 5
vfnunary0 : _root_.vfnunary0
vd : BitVec 5
rm_3b : BitVec 3
SEW LMUL_pow num_elem : Int
SEW_widen : Int := SEW * 2
LMUL_pow_widen : Int := LMUL_pow + 1
x✝ : PUnit
n : Int := num_elem
m : Int := SEW
o : Int := SEW_widen
vm_val : BitVec num_elem.toNat
vs2_val : Vector (BitVec SEW_widen.toNat) num_elem.toNat
vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:65133:18: don't know how to synthesize placeholder for argument 'α'
context:
vm : BitVec 1
vs2 : BitVec 5
vfnunary0 : _root_.vfnunary0
vd : BitVec 5
rm_3b : BitVec 3
SEW LMUL_pow num_elem : Int
SEW_widen : Int := SEW * 2
LMUL_pow_widen : Int := LMUL_pow + 1
x✝ : PUnit
n : Int := num_elem
m : Int := SEW
o : Int := SEW_widen
vm_val : BitVec num_elem.toNat
vs2_val : Vector (BitVec SEW_widen.toNat) num_elem.toNat
vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:65270:37: application type mismatch
  vectorAccess vs2_val
argument
  vs2_val
has type
  Vector (BitVec SEW.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec 64) (?m.2968939 rm_3b SEW num_elem __do_lift✝ x✝¹ vs2_val x✝) : Type
error: ././././LeanRV64DLEAN.lean:67245:47: unexpected token '←'; expected ':=' or '|'
error: ././././LeanRV64DLEAN.lean:67239:25: don't know how to synthesize placeholder
context:
case m
funct6 : mvxfunct6
vm : BitVec 1
vs2 rs1 vd : BitVec 5
SEW LMUL_pow num_elem : Int
n : Int := num_elem
m : Int := SEW
vm_val : BitVec num_elem.toNat
rs1_val : BitVec SEW.toNat
vs2_val vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:67238:18: don't know how to synthesize placeholder for argument 'α'
context:
funct6 : mvxfunct6
vm : BitVec 1
vs2 rs1 vd : BitVec 5
SEW LMUL_pow num_elem : Int
n : Int := num_elem
m : Int := SEW
vm_val : BitVec num_elem.toNat
rs1_val : BitVec SEW.toNat
vs2_val vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:68986:82: application type mismatch
  vectorAccess vd_val
argument
  vd_val
has type
  Vector (BitVec SEW_widen.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec (SEW.toNat * 2))
    (?m.3203714 rm_3b SEW LMUL_pow num_elem __do_lift✝² x✝ vm_val vd_val vs1_val vs2_val __discr✝ initial_result mask i
      result __do_lift✝¹ __do_lift✝) : Type
error: ././././LeanRV64DLEAN.lean:69121:82: application type mismatch
  vectorAccess vd_val
argument
  vd_val
has type
  Vector (BitVec SEW_widen.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec (m.toNat * 2))
    (?m.3220644 rm_3b SEW LMUL_pow num_elem __do_lift✝² x✝ vm_val vd_val rs1_val vs2_val __discr✝ initial_result mask i
      result __do_lift✝¹ __do_lift✝) : Type
error: ././././LeanRV64DLEAN.lean:69372:52: unexpected token '←'; expected ':=' or '|'
error: ././././LeanRV64DLEAN.lean:69336:25: don't know how to synthesize placeholder
context:
case m
funct6 : fvffunct6
vm : BitVec 1
vs2 rs1 vd : BitVec 5
rm_3b : BitVec 3
SEW LMUL_pow num_elem : Int
x✝ : PUnit
n : Int := num_elem
m : Int := SEW
vm_val : BitVec num_elem.toNat
rs1_val : BitVec m.toNat
vs2_val vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:69335:18: don't know how to synthesize placeholder for argument 'α'
context:
funct6 : fvffunct6
vm : BitVec 1
vs2 rs1 vd : BitVec 5
rm_3b : BitVec 3
SEW LMUL_pow num_elem : Int
x✝ : PUnit
n : Int := num_elem
m : Int := SEW
vm_val : BitVec num_elem.toNat
rs1_val : BitVec m.toNat
vs2_val vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:74182:11: unexpected token 'while'; expected ')' or term
error: ././././LeanRV64DLEAN.lean:74181:6: don't know how to synthesize placeholder
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i✝ : Int := 0
step_no✝ : Int := 0
__discr✝ : ?m.4152725 x✝ × ?m.4152726 x✝ × ?m.4152727 x✝
u__3 : ?m.4152725 x✝
i : ?m.4152726 x✝
step_no : ?m.4152727 x✝
⊢ Type
error: ././././LeanRV64DLEAN.lean:74181:6: don't know how to synthesize placeholder
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i✝ : Int := 0
step_no✝ : Int := 0
__discr✝ : ?m.4152725 x✝ × ?m.4152726 x✝ × ?m.4152727 x✝
u__3 : ?m.4152725 x✝
i : ?m.4152726 x✝
step_no : ?m.4152727 x✝
⊢ Type
error: ././././LeanRV64DLEAN.lean:74181:6: don't know how to synthesize placeholder
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i✝ : Int := 0
step_no✝ : Int := 0
__discr✝ : ?m.4152725 x✝ × ?m.4152726 x✝ × ?m.4152727 x✝
u__3 : ?m.4152725 x✝
i : ?m.4152726 x✝
step_no : ?m.4152727 x✝
⊢ Type
error: ././././LeanRV64DLEAN.lean:74181:6: don't know how to synthesize placeholder
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i✝ : Int := 0
step_no✝ : Int := 0
__discr✝ : ?m.4152725 x✝ × ?m.4152726 x✝ × ?m.4152727 x✝
u__3 : ?m.4152725 x✝
i : ?m.4152726 x✝
step_no : ?m.4152727 x✝
⊢ Type
error: ././././LeanRV64DLEAN.lean:74182:4: don't know how to synthesize placeholder for argument 'α'
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i : Int := 0
step_no : Int := 0
⊢ Type
error: ././././LeanRV64DLEAN.lean:74225:4: application type mismatch
  init_model () (cycle_count ())
argument
  cycle_count ()
has type
  PreSailM ?m.4154924 ?m.4154927 ?m.4154928 Unit : Type
but is expected to have type
  SequentialState RegisterType trivialChoiceSource : Type
error: Lean exited with code 1
Some required builds logged failures:
- LeanRV64DLEAN
