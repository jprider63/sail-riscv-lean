✔ [2/7] Built LeanRV64DLEAN.Sail.BitVec
✔ [3/7] Built LeanRV64DLEAN.Sail.Sail
✔ [4/7] Built LeanRV64DLEAN.Defs
✔ [5/7] Built LeanRV64DLEAN.RiscvExtras
✖ [6/7] Building LeanRV64DLEAN
trace: .> LEAN_PATH=././.lake/build/lib LD_LIBRARY_PATH= /home/runner/.elan/toolchains/leanprover--lean4-nightly---nightly-2025-02-05/bin/lean --tstack=400000 ././././LeanRV64DLEAN.lean -R ./././. -o ././.lake/build/lib/LeanRV64DLEAN.olean -i ././.lake/build/lib/LeanRV64DLEAN.ilean -c ././.lake/build/ir/LeanRV64DLEAN.c --json
error: ././././LeanRV64DLEAN.lean:5526:25: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:5528:30: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:16175:43: failed to synthesize
  HSub Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:16163:44: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:16214:30: failed to synthesize
  HSub Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:16201:29: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:16998:26: failed to synthesize
  HSub Int Nat Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:19222:4: fail to show termination for
  Functions.pt_walk
with errors
failed to infer structural recursion:
Not considering parameter sv_width of Functions.pt_walk:
  it is unchanged in the recursive calls
Not considering parameter vpn of Functions.pt_walk:
  it is unchanged in the recursive calls
Not considering parameter ac of Functions.pt_walk:
  it is unchanged in the recursive calls
Not considering parameter priv of Functions.pt_walk:
  it is unchanged in the recursive calls
Not considering parameter mxr of Functions.pt_walk:
  it is unchanged in the recursive calls
Not considering parameter do_sum of Functions.pt_walk:
  it is unchanged in the recursive calls
Cannot use parameter pt_base:
  the type BitVec (if sv_width = 32 then 22 else 44) does not have a `.brecOn` recursor
Cannot use parameter level:
  failed to eliminate recursive application
    pt_walk sv_width vpn ac priv mxr do_sum (BitVec.setWidth (if sv_width = 32 then 22 else 44) ppn) (level - 1).toNat
      global ext_ptw
Cannot use parameter global:
  the type Bool does not have a `.brecOn` recursor
Cannot use parameter ext_ptw:
  the type PUnit does not have a `.brecOn` recursor


Could not find a decreasing measure.
The basic measures relate at each recursive call as follows:
(<, ≤, =: relation proved, ? all proofs failed, _: no proof attempted)
               #1 level #2
1) 19247:20-91  ?     ?  ≤

#1: pt_base
#2: global

Please use `termination_by` to specify a decreasing measure.
error: ././././LeanRV64DLEAN.lean:21046:7: type mismatch
  x✝
has type
  Unit : Type
but is expected to have type
  SailM ?m.1565506 : Type
error: ././././LeanRV64DLEAN.lean:21848:33: failed to synthesize
  HSub Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:21848:28: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:22266:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22267:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22276:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22277:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22392:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22393:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22402:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22403:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22412:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22413:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22423:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22424:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22434:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22435:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22446:12: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22447:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:22483:11: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 32 : Type
error: ././././LeanRV64DLEAN.lean:22573:34: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:22679:37: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:26314:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.1832209 ?m.1832081 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26325:29: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1832924
error: ././././LeanRV64DLEAN.lean:26330:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1833053
error: ././././LeanRV64DLEAN.lean:26339:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1833523
error: ././././LeanRV64DLEAN.lean:26313:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.1831780 Unit : Type
error: ././././LeanRV64DLEAN.lean:26313:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.1831780 Unit : Type
error: ././././LeanRV64DLEAN.lean:26345:27: invalid `do` notation, expected type is not a monad application
  Unit
You can use the `do` notation in pure code by writing `Id.run do` instead of `do`, where `Id` is the identity monad.
error: ././././LeanRV64DLEAN.lean:26381:30: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.1836424 ?m.1836296 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26391:42: function expected at
  writeReg vl ?m.1837564 ?m.1838122
term has type
  EStateM.Result (Error ?m.1837528) (SequentialState ?m.1837524 ?m.1837527) PUnit
error: ././././LeanRV64DLEAN.lean:26399:41: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1838297
error: ././././LeanRV64DLEAN.lean:26402:47: function expected at
  writeReg vl ?m.1838451 ?m.1838848
term has type
  EStateM.Result (Error ?m.1838440) (SequentialState ?m.1838436 ?m.1838439) PUnit
error: ././././LeanRV64DLEAN.lean:26410:43: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1839059
error: ././././LeanRV64DLEAN.lean:26413:49: function expected at
  writeReg vl ?m.1839247 ?m.1839644
term has type
  EStateM.Result (Error ?m.1839236) (SequentialState ?m.1839232 ?m.1839235) PUnit
error: ././././LeanRV64DLEAN.lean:26424:37: application type mismatch
  write_single_element (load_width_bytes * 8) (↑i) (vd + to_bits 5 (↑j * EMUL_reg))
    (BitVec.setWidth (load_width_bytes * 8) elem) trimmed
argument
  trimmed
has type
  Bool : Type
but is expected to have type
  SequentialState RegisterType trivialChoiceSource : Type
error: ././././LeanRV64DLEAN.lean:26427:45: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1840851
error: ././././LeanRV64DLEAN.lean:26430:51: function expected at
  writeReg vl ?m.1841073 ?m.1841470
term has type
  EStateM.Result (Error ?m.1841062) (SequentialState ?m.1841058 ?m.1841061) PUnit
error: ././././LeanRV64DLEAN.lean:26380:18: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.1836008 Bool : Type
error: ././././LeanRV64DLEAN.lean:26380:18: application type mismatch
  pure x✝
argument
  x✝
has type
  Bool : Type
but is expected to have type
  ER ?m.1836008 Bool : Type
error: ././././LeanRV64DLEAN.lean:26445:22: application type mismatch
  foreach_M loop_j_lower loop_j_upper.toNat 1 ()
    (fun j x =>
      let skipped_elem :=
        Sail.BitVec.extractLsb (shiftr (vectorAccess result i) (j * load_width_bytes * 8))
          (load_width_bytes * 8 - 1).toNat 0;
      write_single_element (load_width_bytes * 8) (↑i) (vd + to_bits 5 (↑j * EMUL_reg))
        (BitVec.setWidth (load_width_bytes * 8) skipped_elem))
    trimmed
argument
  trimmed
has type
  Bool : Type
but is expected to have type
  SequentialState RegisterType trivialChoiceSource : Type
error: ././././LeanRV64DLEAN.lean:26449:22: type mismatch
  foreach_M loop_j_lower loop_j_upper.toNat 1 () fun j x =>
    let skipped_elem :=
      Sail.BitVec.extractLsb (shiftr (vectorAccess vd_seg i) (j * load_width_bytes * 8))
        (load_width_bytes * 8 - 1).toNat 0;
    write_single_element (load_width_bytes * 8) (↑i) (vd + to_bits 5 (↑j * EMUL_reg))
      (BitVec.setWidth (load_width_bytes * 8) skipped_elem)
has type
  PreSailM RegisterType trivialChoiceSource exception Unit : Type
but is expected to have type
  Bool : Type
error: ././././LeanRV64DLEAN.lean:26457:22: function expected at
  pure ()
term has type
  ?m.1851454 Unit
error: ././././LeanRV64DLEAN.lean:26431:42: application type mismatch
  writeReg vl ?m.1841073 (pure (print_endline ("CSR vl <- " ++ BitVec.toFormatted __do_lift✝)))
argument
  pure (print_endline ("CSR vl <- " ++ BitVec.toFormatted __do_lift✝))
has type
  ?m.1841076 Unit : Type ?u.1841074
but is expected to have type
  SequentialState ?m.1841058 ?m.1841061 : Type
error: ././././LeanRV64DLEAN.lean:26484:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.1853020 ?m.1852892 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26495:29: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1853737
error: ././././LeanRV64DLEAN.lean:26500:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1853868
error: ././././LeanRV64DLEAN.lean:26508:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1854020
error: ././././LeanRV64DLEAN.lean:26523:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1854590
error: ././././LeanRV64DLEAN.lean:26483:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.1852588 Unit : Type
error: ././././LeanRV64DLEAN.lean:26483:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.1852588 Unit : Type
error: ././././LeanRV64DLEAN.lean:26554:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.1857365 ?m.1857237 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26565:29: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1858072
error: ././././LeanRV64DLEAN.lean:26570:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1858201
error: ././././LeanRV64DLEAN.lean:26579:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1858671
error: ././././LeanRV64DLEAN.lean:26553:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.1856936 Unit : Type
error: ././././LeanRV64DLEAN.lean:26553:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.1856936 Unit : Type
error: ././././LeanRV64DLEAN.lean:26585:27: invalid `do` notation, expected type is not a monad application
  Unit
You can use the `do` notation in pure code by writing `Id.run do` instead of `do`, where `Id` is the identity monad.
error: ././././LeanRV64DLEAN.lean:26618:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.1861154 ?m.1861026 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26629:29: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1861863
error: ././././LeanRV64DLEAN.lean:26634:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1861994
error: ././././LeanRV64DLEAN.lean:26642:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1862146
error: ././././LeanRV64DLEAN.lean:26657:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1862716
error: ././././LeanRV64DLEAN.lean:26617:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.1860722 Unit : Type
error: ././././LeanRV64DLEAN.lean:26617:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.1860722 Unit : Type
error: ././././LeanRV64DLEAN.lean:26690:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.1865334 ?m.1865206 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26702:29: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1866254
error: ././././LeanRV64DLEAN.lean:26707:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1866383
error: ././././LeanRV64DLEAN.lean:26716:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1866823
error: ././././LeanRV64DLEAN.lean:26689:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.1864905 Unit : Type
error: ././././LeanRV64DLEAN.lean:26689:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.1864905 Unit : Type
error: ././././LeanRV64DLEAN.lean:26722:27: invalid `do` notation, expected type is not a monad application
  Unit
You can use the `do` notation in pure code by writing `Id.run do` instead of `do`, where `Id` is the identity monad.
error: ././././LeanRV64DLEAN.lean:26757:23: application type mismatch
  foreach_ME (cont loop_j_lower)
argument
  cont loop_j_lower
has type
  ER ?m.1869285 ?m.1869157 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26769:29: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1870209
error: ././././LeanRV64DLEAN.lean:26774:31: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1870340
error: ././././LeanRV64DLEAN.lean:26782:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1870492
error: ././././LeanRV64DLEAN.lean:26797:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1871032
error: ././././LeanRV64DLEAN.lean:26756:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Retired : Type
but is expected to have type
  ER ?m.1868853 Unit : Type
error: ././././LeanRV64DLEAN.lean:26756:11: application type mismatch
  pure x✝
argument
  x✝
has type
  Unit : Type
but is expected to have type
  ER ?m.1868853 Unit : Type
error: ././././LeanRV64DLEAN.lean:26832:34: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1873420
error: ././././LeanRV64DLEAN.lean:26837:36: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1873582
error: ././././LeanRV64DLEAN.lean:26844:31: type mismatch, result value has type
  Unit : Type
but is expected to have type
  ER Retired ?m.1873262 : Type
error: ././././LeanRV64DLEAN.lean:26847:38: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1874075
error: ././././LeanRV64DLEAN.lean:26863:25: application type mismatch
  foreach_ME (cont loop_i_lower)
argument
  cont loop_i_lower
has type
  ER ?m.1875303 ?m.1875175 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26875:31: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1876157
error: ././././LeanRV64DLEAN.lean:26880:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1876330
error: ././././LeanRV64DLEAN.lean:26886:28: type mismatch, result value has type
  Unit : Type
but is expected to have type
  ER Retired ?m.1876011 : Type
error: ././././LeanRV64DLEAN.lean:26888:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1876896
error: ././././LeanRV64DLEAN.lean:26862:13: application type mismatch
  pure x✝
argument
  x✝
has type
  Int : Type
but is expected to have type
  ER Retired Int : Type
error: ././././LeanRV64DLEAN.lean:26923:34: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1879324
error: ././././LeanRV64DLEAN.lean:26928:36: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1879486
error: ././././LeanRV64DLEAN.lean:26936:38: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1879669
error: ././././LeanRV64DLEAN.lean:26946:45: type mismatch, result value has type
  Unit : Type
but is expected to have type
  ER Retired ?m.1879166 : Type
error: ././././LeanRV64DLEAN.lean:26951:40: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1880292
error: ././././LeanRV64DLEAN.lean:26969:25: application type mismatch
  foreach_ME (cont loop_i_lower)
argument
  cont loop_i_lower
has type
  ER ?m.1881678 ?m.1881550 : Type
but is expected to have type
  Nat : Type
error: ././././LeanRV64DLEAN.lean:26981:31: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1882412
error: ././././LeanRV64DLEAN.lean:26986:33: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1882581
error: ././././LeanRV64DLEAN.lean:26994:35: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1882775
error: ././././LeanRV64DLEAN.lean:27002:42: type mismatch, result value has type
  Unit : Type
but is expected to have type
  ER Retired ?m.1882270 : Type
error: ././././LeanRV64DLEAN.lean:27007:37: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1883331
error: ././././LeanRV64DLEAN.lean:26968:13: application type mismatch
  pure x✝
argument
  x✝
has type
  Int : Type
but is expected to have type
  ER Retired Int : Type
error: ././././LeanRV64DLEAN.lean:26999:84: application type mismatch
  vectorAccess vs3_val
argument
  vs3_val
has type
  Vector (BitVec (load_width_bytes * 8)) elem_per_reg : Type
but is expected to have type
  Vector (BitVec (8 * load_width_bytes))
    (?m.1885278 start_element __discr✝ cur_elem✝¹ cur_field j cur_elem✝ vs3_val i cur_elem x✝¹ __do_lift✝¹ vaddr
      __do_lift✝ paddr snd✝ eares x✝) : Type
error: ././././LeanRV64DLEAN.lean:27061:30: function expected at
  early_return (handle_mem_exception vaddr (E_Load_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1887218
error: ././././LeanRV64DLEAN.lean:27066:32: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1887339
error: ././././LeanRV64DLEAN.lean:27074:34: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1887553
error: ././././LeanRV64DLEAN.lean:27085:35: function expected at
  early_return (handle_mem_exception vaddr (E_SAMO_Addr_Align ()))
term has type
  ER (SailM Unit) ?m.1888215
error: ././././LeanRV64DLEAN.lean:27090:37: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1888327
error: ././././LeanRV64DLEAN.lean:27098:39: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1888463
error: ././././LeanRV64DLEAN.lean:27111:41: function expected at
  early_return (handle_mem_exception vaddr e)
term has type
  ER (SailM Unit) ?m.1888795
error: ././././LeanRV64DLEAN.lean:27116:20: application type mismatch
  ite ((op == VLM) = true) (write_single_element 8 (↑i) vd_or_vs3 (vectorAccess vd_or_vs3_val i))
argument
  write_single_element 8 (↑i) vd_or_vs3 (vectorAccess vd_or_vs3_val i)
has type
  SailM Unit : Type
but is expected to have type
  Unit : Type
error: ././././LeanRV64DLEAN.lean:63583:123: unexpected token 'if'; expected ')', ',' or ':'
error: ././././LeanRV64DLEAN.lean:63631:37: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:63710:26: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:63824:47: unexpected token '←'; expected ':=' or '|'
error: ././././LeanRV64DLEAN.lean:63933:37: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:64015:57: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:64157:26: failed to synthesize
  HSub Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:64170:29: function expected at
  early_return (handle_illegal_vtype ())
term has type
  ER (SailM Unit) ?m.2884062
error: ././././LeanRV64DLEAN.lean:64157:21: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:64194:26: failed to synthesize
  HSub Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:64207:29: function expected at
  early_return (handle_illegal_vtype ())
term has type
  ER (SailM Unit) ?m.2890959
error: ././././LeanRV64DLEAN.lean:64194:21: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:64228:26: failed to synthesize
  HSub Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:64228:21: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:64253:28: application type mismatch
  vectorAccess vs2_val
argument
  vs2_val
has type
  Vector (BitVec SEW.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec (2 ^ 3 * 8)) (?m.2909205 SEW num_elem __do_lift✝ x✝ vs2_val) : Type
error: ././././LeanRV64DLEAN.lean:64637:125: unexpected token 'if'; expected ')', ',' or ':'
error: ././././LeanRV64DLEAN.lean:64719:37: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:64786:26: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:64912:42: unexpected token '('; expected ':=', '_', 'rec' or identifier
error: ././././LeanRV64DLEAN.lean:65002:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65003:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65010:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65011:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65018:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65019:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65022:70: application type mismatch
  vectorAccess vs2_val
argument
  vs2_val
has type
  Vector (BitVec SEW.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec 16)
    (?m.2979709 rm_3b SEW LMUL_pow num_elem __do_lift✝ x✝ vm_val vs2_val vd_val __discr✝ initial_result mask i
      result) : Type
error: ././././LeanRV64DLEAN.lean:65057:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65058:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65065:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65066:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65075:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65076:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65084:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65085:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65092:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65093:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65100:36: type mismatch, result value has type
  BitVec 5 × BitVec 32 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65101:35: type mismatch, result value has type
  BitVec 5 × BitVec 64 : Type
but is expected to have type
  BitVec 5 × BitVec 16 : Type
error: ././././LeanRV64DLEAN.lean:65101:86: application type mismatch
  vectorAccess vs2_val
argument
  vs2_val
has type
  Vector (BitVec SEW.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec 64)
    (?m.2995061 rm_3b SEW LMUL_pow num_elem __do_lift✝ x✝¹ vm_val vs2_val vd_val __discr✝ initial_result mask i result
      x✝) : Type
error: ././././LeanRV64DLEAN.lean:65140:42: unexpected token '('; expected ':=', '_', 'rec' or identifier
error: ././././LeanRV64DLEAN.lean:65137:25: don't know how to synthesize placeholder
context:
case m
vm : BitVec 1
vs2 : BitVec 5
vfnunary0 : _root_.vfnunary0
vd : BitVec 5
rm_3b : BitVec 3
SEW LMUL_pow num_elem : Int
SEW_widen : Int := SEW * 2
LMUL_pow_widen : Int := LMUL_pow + 1
x✝ : PUnit
n : Int := num_elem
m : Int := SEW
o : Int := SEW_widen
vm_val : BitVec num_elem.toNat
vs2_val : Vector (BitVec SEW_widen.toNat) num_elem.toNat
vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:65136:18: don't know how to synthesize placeholder for argument 'α'
context:
vm : BitVec 1
vs2 : BitVec 5
vfnunary0 : _root_.vfnunary0
vd : BitVec 5
rm_3b : BitVec 3
SEW LMUL_pow num_elem : Int
SEW_widen : Int := SEW * 2
LMUL_pow_widen : Int := LMUL_pow + 1
x✝ : PUnit
n : Int := num_elem
m : Int := SEW
o : Int := SEW_widen
vm_val : BitVec num_elem.toNat
vs2_val : Vector (BitVec SEW_widen.toNat) num_elem.toNat
vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:65273:37: application type mismatch
  vectorAccess vs2_val
argument
  vs2_val
has type
  Vector (BitVec SEW.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec 64) (?m.3005840 rm_3b SEW num_elem __do_lift✝ x✝¹ vs2_val x✝) : Type
error: ././././LeanRV64DLEAN.lean:67248:47: unexpected token '←'; expected ':=' or '|'
error: ././././LeanRV64DLEAN.lean:67242:25: don't know how to synthesize placeholder
context:
case m
funct6 : mvxfunct6
vm : BitVec 1
vs2 rs1 vd : BitVec 5
SEW LMUL_pow num_elem : Int
n : Int := num_elem
m : Int := SEW
vm_val : BitVec num_elem.toNat
rs1_val : BitVec SEW.toNat
vs2_val vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:67241:18: don't know how to synthesize placeholder for argument 'α'
context:
funct6 : mvxfunct6
vm : BitVec 1
vs2 rs1 vd : BitVec 5
SEW LMUL_pow num_elem : Int
n : Int := num_elem
m : Int := SEW
vm_val : BitVec num_elem.toNat
rs1_val : BitVec SEW.toNat
vs2_val vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:67458:50: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:67459:55: failed to synthesize
  HPow Nat Int Int
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././LeanRV64DLEAN.lean:68989:82: application type mismatch
  vectorAccess vd_val
argument
  vd_val
has type
  Vector (BitVec SEW_widen.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec (SEW.toNat * 2))
    (?m.3252486 rm_3b SEW LMUL_pow num_elem __do_lift✝² x✝ vm_val vd_val vs1_val vs2_val __discr✝ initial_result mask i
      result __do_lift✝¹ __do_lift✝) : Type
error: ././././LeanRV64DLEAN.lean:69124:82: application type mismatch
  vectorAccess vd_val
argument
  vd_val
has type
  Vector (BitVec SEW_widen.toNat) num_elem.toNat : Type
but is expected to have type
  Vector (BitVec (m.toNat * 2))
    (?m.3270567 rm_3b SEW LMUL_pow num_elem __do_lift✝² x✝ vm_val vd_val rs1_val vs2_val __discr✝ initial_result mask i
      result __do_lift✝¹ __do_lift✝) : Type
error: ././././LeanRV64DLEAN.lean:69375:52: unexpected token '←'; expected ':=' or '|'
error: ././././LeanRV64DLEAN.lean:69339:25: don't know how to synthesize placeholder
context:
case m
funct6 : fvffunct6
vm : BitVec 1
vs2 rs1 vd : BitVec 5
rm_3b : BitVec 3
SEW LMUL_pow num_elem : Int
x✝ : PUnit
n : Int := num_elem
m : Int := SEW
vm_val : BitVec num_elem.toNat
rs1_val : BitVec m.toNat
vs2_val vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:69338:18: don't know how to synthesize placeholder for argument 'α'
context:
funct6 : fvffunct6
vm : BitVec 1
vs2 rs1 vd : BitVec 5
rm_3b : BitVec 3
SEW LMUL_pow num_elem : Int
x✝ : PUnit
n : Int := num_elem
m : Int := SEW
vm_val : BitVec num_elem.toNat
rs1_val : BitVec m.toNat
vs2_val vd_val : Vector (BitVec SEW.toNat) num_elem.toNat
__discr✝ : Vector (BitVec SEW.toNat) num_elem.toNat × BitVec num_elem.toNat
initial_result : Vector (BitVec SEW.toNat) num_elem.toNat
mask : BitVec num_elem.toNat
result✝ : Vector (BitVec SEW.toNat) num_elem.toNat := initial_result
loop_i_lower : Nat := 0
loop_i_upper : Int := num_elem - 1
i : Nat
result : Vector (BitVec SEW.toNat) num_elem.toNat
⊢ Type
error: ././././LeanRV64DLEAN.lean:74185:11: unexpected token 'while'; expected ')' or term
error: ././././LeanRV64DLEAN.lean:74184:6: don't know how to synthesize placeholder
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i✝ : Int := 0
step_no✝ : Int := 0
__discr✝ : ?m.4238871 x✝ × ?m.4238872 x✝ × ?m.4238873 x✝
u__3 : ?m.4238871 x✝
i : ?m.4238872 x✝
step_no : ?m.4238873 x✝
⊢ Type
error: ././././LeanRV64DLEAN.lean:74184:6: don't know how to synthesize placeholder
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i✝ : Int := 0
step_no✝ : Int := 0
__discr✝ : ?m.4238871 x✝ × ?m.4238872 x✝ × ?m.4238873 x✝
u__3 : ?m.4238871 x✝
i : ?m.4238872 x✝
step_no : ?m.4238873 x✝
⊢ Type
error: ././././LeanRV64DLEAN.lean:74184:6: don't know how to synthesize placeholder
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i✝ : Int := 0
step_no✝ : Int := 0
__discr✝ : ?m.4238871 x✝ × ?m.4238872 x✝ × ?m.4238873 x✝
u__3 : ?m.4238871 x✝
i : ?m.4238872 x✝
step_no : ?m.4238873 x✝
⊢ Type
error: ././././LeanRV64DLEAN.lean:74184:6: don't know how to synthesize placeholder
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i✝ : Int := 0
step_no✝ : Int := 0
__discr✝ : ?m.4238871 x✝ × ?m.4238872 x✝ × ?m.4238873 x✝
u__3 : ?m.4238871 x✝
i : ?m.4238872 x✝
step_no : ?m.4238873 x✝
⊢ Type
error: ././././LeanRV64DLEAN.lean:74185:4: don't know how to synthesize placeholder for argument 'α'
context:
x✝ : Unit
insns_per_tick : Int := plat_insns_per_tick ()
i : Int := 0
step_no : Int := 0
⊢ Type
error: ././././LeanRV64DLEAN.lean:74228:4: application type mismatch
  init_model () (cycle_count ())
argument
  cycle_count ()
has type
  PreSailM ?m.4241070 ?m.4241073 ?m.4241074 Unit : Type
but is expected to have type
  SequentialState RegisterType trivialChoiceSource : Type
error: Lean exited with code 1
Some required builds logged failures:
- LeanRV64DLEAN
